InProgress
Convert IP unit tests from octal to assembler and minalib them (in progress)
minalib add test cases for interrupts (many of them already marked TODO)
Lose unnecessary accessors (in progress)

TODO
unit tests - all tests expected to run to completion should ensure they actually did
minalib special mnemonics need attention (JGD, BT, etc)
minalib data generation - strings
minalib float values - firm this up
minalib data generation - floats
minalib put directives into the system dictionary
minalib can we do implicit base register (and do it right)?  also with the $LIT directive...
minalib make sure we don't propagate flagged attribute in any of the operators
minalib support procs and (maybe) functions
minalib allow expression list inside literal which is part of expression
  e.g., ((005, 007) + 12)

minalib functions
  $ILCN
  $L0
  $L1
  $LCB
  $LCFV
  $LCN
  $SSS
  $LCV
  $(n)
minalib directives
  $EQU
  $EQUF
  $USE (implicit base register)
  $INSERT
  $BASE (maybe)
  $IF / $ELSE / $ELSF / $ENDF
  $DO / $ENDD
  $REPEAT / $ENDR
  $END
  $FORM
  $GEN
  $GFORM
  $INCLUDE
  $INFO (?)

hardwarelib Finish adding instructions to IP
hardwarelib UPI send/ack mechanism
hardwarelib Figure out how to do channel programs
  do we need a cleaner IO path?
  we'd still like word and byte operations... don't we?
hardwarelib Rewrite disk (and maybe tape) devices using async IO
hardwarelib All Device objects: add Builder class, make constructors private
hardwarelib Device.IoInfo objects: add Builder class, make constructors private

Mina - wrapper around minalib

Exec - using Mina (or minalib, but hopefully mina)

