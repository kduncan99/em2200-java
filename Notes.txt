-- InProgress
Lose unnecessary accessors (in progress)
minalib unit tests for node references
minalib unit tests for test instructions (some are missing)

-- BUGS

-- TODO
hardwarelib make sure TNOP instruction accesses the word at U even though it doesn't use it (see 6.7.4 of IP PRM)
minalib need some conditional jump tests which would incur reference violation if they jumped
    both jumping (ref violation) and not jumping (no ref violation)
minalib unit tests for string value generation
minalib support special form for JGD instruction
minalib support special form for BT instruction
minalib support node references on LHS of $EQU statements
minalib need to put partial-words into the dictionary - and should we allow these as expressions in j-field?
minalib remove UndefinedReferenceDiagnostic (I think...)
minalib use DiagnosticDirective for stuff
pick up the rest of the unit tests we need to do but haven't yet
minalib do we need microstrings?
minalib $USE (A.2.8) specifies base register to use if none given
minalib add test cases for interrupts (many of them already marked TODO)
minalib float values - firm this up (how do we support it)
minalib data generation - floats
minalib can we do implicit base register (and do it right)?  also with the $LIT directive...
minalib make sure we don't propagate flagged attribute in any of the operators
minalib support user-defined functions
minalib allow expression list inside literal which is part of expression
  e.g., ((005, 007) + 12)

minalib functions
  $ILCN
  $L0
  $L1
  $LCB
  $LCFV
  $LCN
  $SSS
  $LCV
  $NODE (an empty node - this is maybe a built-in value, not a function?)
minalib directives
  $END directive on top-level code (do we require it?)
  $EQUF
  $USE (implicit base register)
  $INSERT (maybe)
  $BASE (maybe)
  $IF / $ELSE / $ELSF / $ENDF
  $DO / $ENDD
  $REPEAT / $ENDR
  $FORM
  $GEN
  $INCLUDE (what does this mean for us?)
  $INFO finish the various groups we're going to implement

hardwareLib note - when changing code banks, observe q/t word mode, and arithfault modes
hardwarelib Finish adding instructions to IP
    CR from test categories
    Other categories
hardwarelib UPI send/ack mechanism
hardwarelib Figure out how to do channel programs
  do we need a cleaner IO path?
  we'd still like word and byte operations... don't we?
hardwarelib Rewrite disk (and maybe tape) devices using async IO
hardwarelib All Device objects: add Builder class, make constructors private
hardwarelib Device.IoInfo objects: add Builder class, make constructors private

Mina - wrapper around minalib

Exec - using Mina (or minalib, but hopefully mina)
