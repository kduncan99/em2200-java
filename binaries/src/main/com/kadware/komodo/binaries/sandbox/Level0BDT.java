/*
 * Copyright (c) 2018-2020 by Kurt Duncan - All Rights Reserved
 */

package com.kadware.komodo.binaries.sandbox;

public class Level0BDT {

    public static final String[] SOURCE = {
        ". LEVEL0BDT",
        ". Copyright (C) 2019 by Kurt Duncan - All Rights Reserved",
        ".",
        ". This code represents the BDT for level 0, which is global to the whole system.",
        ". It will contain BankDescriptors for all the Level 0 KOS banks.",
        ". Currently, we plan for this to include kernel-level stuff, but maybe not lower-level things",
        ". such as SMOQUE, MFD, PF, things like that.",
        ". We DO expect it to contain top-level interrupt handling, task scheduling, and memory management.",
        ".",
        "$(0)      $LIT",
        ".",
        "LEVEL0BDT$* . external label",
        ".",
        ". The first 64 words are interrupt vectors for corresponding interrupt classes.",
        ". The vector for interrupt class 0 is +0, for class 1 is +1, etc.",
        ". The vectors are in L,BDI,OFFSET format.",
        ".",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "          + BDIREF$+IH$NOTIMPL,IH$NOTIMPL",
        "",
        ". BDIs less than 0,32 are illegal.",
        ". The space taken by what would have been the Bank Descriptors for banks 0,0 to 0.7",
        ". are stuffed with the 64-word interrupt vector table, above.",
        ". There are no Bank Descriptors for banks 0,8 through 0,31 either.",
        ".",
        "          $RES 8*24",
        ".",
        ". The Bank Descriptors for banks 0,32 and upward, are located here.",
        ". BD format:",
        ". +0 Bits0-2    GAP ERW",
        ".    Bits3-5    SAP ERW",
        ".    Bits8-11   Type",
        ".                   00 = extended mode bank",
        ".                   01 = basic mode bank",
        ".                   02 = gate bank",
        ".                   03 = indirect bank",
        ".                   04 = queue bank",
        ".                   06 = queue bank repository",
        ".    Bit13      G",
        ".    Bit15      S",
        ".    Bit16      U",
        ".    H2         Access Lock",
        ". +1 Q1         Lower Limit",
        ".    Bits9-35   Upper Limit",
        ". +2            Base Address",
        ". +3            Base Address",
        ". +4-7          reserved",
        ". ",
        //TODO
        "",
        "LEVEL0BDT$SZ* $EQU $-LEVEL0BDT$",
    };
}
