/*
 * Copyright (c) 2018-2020 by Kurt Duncan - All Rights Reserved
 */

package com.kadware.komodo.binaries.sandbox;

public class Level0BDT {

    public static final String[] SOURCE = {
        ". LEVEL0BDT",
        ". Copyright (C) 2019 by Kurt Duncan - All Rights Reserved",
        ".",
        ". This code represents the BDT for level 0, which is global to the whole system.",
        ". It will contain BankDescriptors for all the Level 0 KOS banks.",
        ". Currently, we plan for this to include kernel-level stuff, but maybe not lower-level things",
        ". such as SMOQUE, MFD, PF, things like that.",
        ". We DO expect it to contain top-level interrupt handling, task scheduling, and memory management.",
        ".",
        "$(0)      $LIT",
        ".",
        "LEVEL0BDT$* . external label",
        ".",
        ". The first 64 words are interrupt vectors for corresponding interrupt classes.",
        ". The vector for interrupt class 0 is +0, for class 1 is +1, etc.",
        ". The vectors are in L,BDI,OFFSET format.",
        ".",
        "          + BDIREF$+IH_00,IH_00",
        "          + BDIREF$+IH_01,IH_01",
        "          + BDIREF$+IH_02,IH_02",
        "          + BDIREF$+IH_03,IH_03",
        "          + BDIREF$+IH_04,IH_04",
        "          + BDIREF$+IH_05,IH_05",
        "          + BDIREF$+IH_06,IH_06",
        "          + BDIREF$+IH_07,IH_07",
        "          + BDIREF$+IH_10,IH_10",
        "          + BDIREF$+IH_11,IH_11",
        "          + BDIREF$+IH_12,IH_12",
        "          + BDIREF$+IH_13,IH_13",
        "          + BDIREF$+IH_14,IH_14",
        "          + BDIREF$+IH_15,IH_15",
        "          + BDIREF$+IH_16,IH_16",
        "          + BDIREF$+IH_17,IH_17",
        "          + BDIREF$+IH_20,IH_20",
        "          + BDIREF$+IH_21,IH_21",
        "          + BDIREF$+IH_22,IH_22",
        "          + BDIREF$+IH_23,IH_23",
        "          + BDIREF$+IH_24,IH_24",
        "          + BDIREF$+IH_25,IH_25",
        "          + BDIREF$+IH_26,IH_26",
        "          + BDIREF$+IH_27,IH_27",
        "          + BDIREF$+IH_30,IH_30",
        "          + BDIREF$+IH_31,IH_31",
        "          + BDIREF$+IH_32,IH_32",
        "          + BDIREF$+IH_33,IH_33",
        "          + BDIREF$+IH_34,IH_34",
        "          + BDIREF$+IH_35,IH_35",
        "          + BDIREF$+IH_36,IH_36",
        "          + BDIREF$+IH_37,IH_37",
        ".",
        "          $RES 32                  . Interrupts 040 through 077 which should never happen",
        "",
        ". BDIs less than 0,32 are illegal.",
        ". The space taken by what would have been the Bank Descriptors for banks 0,0 to 0,7",
        ". are stuffed with the 64-word interrupt vector table, above.",
        ". There are no Bank Descriptors for banks 0,8 through 0,31 either.",
        ".",
        "          $RES 8*24                . BDs 0,8 to 0,31",
        ".",
        ". The Bank Descriptors for banks 0,32 and upward, are located here.",
        ". BD format:",
        ". +0 Bits0-2    GAP ERW",
        ".    Bits3-5    SAP ERW",
        ".    Bits8-11   Type",
        ".                   00 = extended mode bank",
        ".                   01 = basic mode bank",
        ".                   02 = gate bank",
        ".                   03 = indirect bank",
        ".                   04 = queue bank",
        ".                   06 = queue bank repository",
        ".    Bit13      G",
        ".    Bit15      S",
        ".    Bit16      U",
        ".    H2         Access Lock",
        ". +1 Q1         Lower Limit",
        ".    Bits9-35   Upper Limit",
        ". +2            Base Address",
        ". +3            Base Address",
        ". +4-7          reserved",
        ". ",
        //TODO actually populate the BDTs below...
        "          $RES 8 . for 040",
        "          $RES 8 . for 041",
        "          $RES 8 . for 042",
        "          $RES 8 . for 043",
        "          $RES 8 . for 044",
        "",
        "LEVEL0BDT$SZ* $EQU $-LEVEL0BDT$",
    };
}
